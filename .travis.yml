matrix:
  include:
    - os: osx
      if: type IN (push)
      osx_image: xcode9.2
      language: node_js
      node_js: "9"
      env:
        - ELECTRON_CACHE=$HOME/.cache/electron
        - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder

    - os: linux
      if: type IN (push)
      services: docker
      node_js: "9"
      sudo: required
      language: generic

    - os: linux
      if: type IN (pull_request)
      node_js: "9"
      sudo: required
      language: generic

cache:
  directories:
  - node_modules
  - $HOME/.cache/electron
  - $HOME/.cache/electron-builder

before_install:
  - |
    if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      mkdir -p /tmp/git-lfs && curl -L https://github.com/github/git-lfs/releases/download/v2.3.1/git-lfs-$([ "$TRAVIS_OS_NAME" == "linux" ] && echo "linux" || echo "darwin")-amd64-2.3.1.tar.gz | tar -xz -C /tmp/git-lfs --strip-components 1
      export PATH="/tmp/git-lfs:$PATH"
    fi

install:
  - npm install

before_script:
  - git lfs pull
  - npm run validate-files
  - npm run build:dist

script:
  - |
    if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then
      if [ "$TRAVIS_OS_NAME" == "linux" ]; then
        docker run --rm \
          --env-file <(env | grep -vE '\r|\n' | grep -iE 'DEBUG|NODE_|ELECTRON_|YARN_|NPM_|CI|CIRCLE|TRAVIS|APPVEYOR_|CSC_|_TOKEN|_KEY|AWS_|STRIP|BUILD_') \
          -v ${PWD}:/project \
          -v ~/.cache/electron:/root/.cache/electron \
          -v ~/.cache/electron-builder:/root/.cache/electron-builder \
          electronuserland/builder:wine \
          /bin/bash -c "npm run build:docker"
      else
        npm run build:mac
      fi
    fi

before_cache:
  - rm -rf $HOME/.cache/electron-builder/wine

branches:
  except:
    - "/^v\\d+\\.\\d+\\.\\d+$/"

notifications:
  email:
    on_success: never

deploy:
  provider: releases
  api_key:
    secure: efi7NIzXm0/eh8iHPXT2FhnQ5Lsro3iw/p9fzViv9HXsS8wBcP3U2cNbo5e7aZG4Yb4LerzFgz9khmKsCbJ1cYoZ5hgAaehXGcKRT/I9KJJ6a3mWmNjJ3ru2NYL8lgrYfIQmaAAB0qIV5pDq0tFDbFdXIO+tSK0jJDeFoda/I7XR0lrrn2O4PEhy9YB/4S8elE+e+ppaeMjshvXcbYi29K4b1LdfSvd/xDVa5STt8eTVwze9vTzErGSiZD6x5B5X4eg1ABv630THUP1zClI9tI4B/XIF0EsvfWBoXZbSFPbCfoWL9jZLfwoqUV9yyiryHspgekoJSz3yzdP96xAcfgSPuL8mkBy7PB4qTPvp3ASbdPPgHhw7EVjprAhHVQH4GDkZNqNxtPFSiOjCJM2FveF5CkFpqRBrOC/J2PzAn5N+usEQBLYzVsunfMvYs1Wgtk8CWGk2/DgMJi4fQEdWknNPxyUc92MWar0dHLGfcYqpv7Midj5v14opvBxw9XPtcPA46/F971BxkyZyjImk8WObN2WqiwyDlweq8VBFVy+kIohLhcvHEMmmb6ZVFZoFDbOaFmKIfokLPwWXsi1uGjH7SXbChbzggmmYFRkvAHqsJ5tk3xCPMOABPlqiBjSLrhzbXJzG3Rzd43Xr6oTxEV9x5wP0LmSWR9SXPZppzYU=
  file_glob: true
  file: release/Steam ROM Manager!(*.blockmap)
  skip_cleanup: true
  draft: true
  on:
    tags: true
