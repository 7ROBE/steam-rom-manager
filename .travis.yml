matrix:
  include:
    - os: osx
      if: type IN (push)
      osx_image: xcode9.2
      language: node_js
      node_js: "9"
      env:
        - ELECTRON_CACHE=$HOME/.cache/electron
        - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder

    - os: linux
      if: type IN (push)
      services: docker
      node_js: "9"
      sudo: required
      language: generic

    - os: linux
      if: type IN (pull_request)
      node_js: "9"
      sudo: required
      language: generic

cache:
  directories:
  - node_modules
  - $HOME/.cache/electron
  - $HOME/.cache/electron-builder

before_install:
  - |
    if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      mkdir -p /tmp/git-lfs && curl -L https://github.com/github/git-lfs/releases/download/v2.3.1/git-lfs-$([ "$TRAVIS_OS_NAME" == "linux" ] && echo "linux" || echo "darwin")-amd64-2.3.1.tar.gz | tar -xz -C /tmp/git-lfs --strip-components 1
      export PATH="/tmp/git-lfs:$PATH"
    fi

install:
  - npm install

before_script:
  - git lfs pull
  - npm run validate-files
  - npm run build:dist

script:
  - |
    if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then
      if [ "$TRAVIS_OS_NAME" == "linux" ]; then
        docker run --rm \
          --env-file <(env | grep -vE '\r|\n' | grep -iE 'DEBUG|NODE_|ELECTRON_|YARN_|NPM_|CI|CIRCLE|TRAVIS|APPVEYOR_|CSC_|_TOKEN|_KEY|AWS_|STRIP|BUILD_') \
          -v ${PWD}:/project \
          -v ~/.cache/electron:/root/.cache/electron \
          -v ~/.cache/electron-builder:/root/.cache/electron-builder \
          electronuserland/builder:wine \
          /bin/bash -c "npm run build:docker"
      else
        npm run build:mac
      fi
    fi

before_cache:
  - rm -rf $HOME/.cache/electron-builder/wine

branches:
  except:
    - "/^v\\d+\\.\\d+\\.\\d+$/"

notifications:
  email:
    on_success: never

deploy:
  provider: releases
  api_key:
    secure: cppQmKgyWqbTGSWbq/afQWa0bqa2C6FuEmyjszRz/ObKls8EqE6NANR39bgSL2rH9LIEbPwfocC4uva1AdrGWYEDCgdApqHk4HnHpOkD+bchkVmmPawinRwMX0laukGUt1D0NzsmkzL9Em0fkGgNHaRwOvV8gb3ahMK3Y520t+tNz9HZ8VZGvO9IhNdVk7YLuGuKK/Cen9JSqIz0guJBrTT0GkTctxQWaSxX+6djiy4YXUODtuIeyEItIbxE3wLV+yOuVboEZb7f50Sd7biIXtz1Cxf0uJmkrVkgjlVihHGzz8ML0DR2u00wpHOTe+riNWLEgvdhKUvdxqgayFcqu12uNMPAdpo9U1v/8uZN0NzgJJJEf7xvLbi1GGWcAiFNlKcTGumPr6TIX+jrh+yw0wp9nDzbJwUaioGUOuWWXOMVhQRSGPZSAby4zm447BoJ76/Rm9RfPnlz3H6Aaft9WYjU+UVAj12CfRN826g2+CpBhEb/isn0+mAmLGSdLecB8JIViGCwaCVHExZLU2JV9XSg9plf87AIzz8FEjCLVxTiq/xasdBGgJTnBtKOxGi1055Q2pZ2Z9eiVUnsQ4QRRTs75w9jYvhes23FuzkEIrCuiMu5qE3N1qu00h1UFBcYYvoC9YmUhD3bILYkbVLBzQScIX3/0U9JD4Sn98Ci9rs=
  file_glob: true
  file: release/[Ss]team*[Rr][Oo][Mm]*[Mm]anager!(*.blockmap)
  skip_cleanup: true
  draft: true
  on:
    tags: true
